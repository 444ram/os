add
title adding of two 16bit numbers
.model small
.stack 10h
.data
    num1 dw 5h
    num2 dw 2h
    sum dw 2 dup(0)
.code
    mov ax,data
    mov ds,ax
    mov bx,0
    mov ax,num1
    add ax,num2
    mov sum,ax
    adc bx,0h
    mov sum[2],bx
    hlt

sub

title subtraction of two 16bit numbers

.model small

.stack 10h

.data

    num1 dw 0fff0h
    num2 dw 1234h
    diff  dw 2 dup(0)

.code

    mov ax,data
    mov ds,ax
    
    mov bx,0h
    mov ax,num1
    sub ax,num2
    mov diff,ax
    adc bx,0h
    mov diff[2],bx
    
    hlt

mul

title multiplication of two 16bit numbers

.model small

.stack 10h

.data

    num1 dw 000fh
    num2 dw 000ah
    prod  dw 2 dup(0)

.code

    mov ax,data
    mov ds,ax
    
    mov ax,num1
    mul num2
    mov prod,ax
    mov prod[2],dx
    
    hlt

ascii

title ascii adjustment after addition
.model small
.stack 10h
.data
    n1 db '3'
    n2 db '9'
.code
    mov ax,data
    mov ds,ax
    mov ax,0h
    mov al,n1
    add al,n2
    aaa
    hlt

deci

title decimal adjustment after addition
.model small
.stack 10h
.data
    n1 db 35h
    n2 db 37h
.code
    mov ax,data
    mov ds,ax
    mov ax,0h
    mov al,n1
    add al,n2
    daa
    hlt

pack

title Packing two digits into a  byte

.model small

.stack 10h

.data

    num1 db 09h
    num2 db 05h
    pack db dup(0)

.code

    mov ax,data
    mov ds,ax
                  
    mov al,num1
    mov bl,num2
    
    ror al,4
    or al,bl
    mov pack,al
   
    
    hlt

1

title count the number of ones in the given byte

.model small

.stack 10h

.data

    num1 db 0f4h
    

.code

    mov ax,data
    mov ds,ax
    
    mov al,num1
    mov cx,8
    mov bl,0h
    
    again:  rcr al,1
            jnc skip
            inc bl
            
    skip:   loop again
    
    hlt

0

title count the number of zeros in the given byte

.model small

.stack 10h

.data

    num1 db 0f4h
    

.code

    mov ax,data
    mov ds,ax
    
    mov al,num1
    mov cx,8
    mov bl,0h
    
    again:  rcr al,1
            jc skip
            inc bl
            
    skip:   loop again
    
    hlt

nature

title checking nature of number
.model small
.stack 10h
.data
    n db 00h
    positive db "The number is positive$"
    negative db "The number is negative$"
    zero db "The number is zero$"
.code
    mov ax,data
    mov ds,ax
    mov al,n
    cmp al,0
    je zeroes
    jl lesser
    jmp greater
    greater: 
            mov ah,09h
            lea dx,positive
            int 21h
            jmp end
    lesser:
            mov ah,09h
            lea dx,negative
            int 21h
            jmp end
    zeroes:
            mov ah,09h
            lea dx,zero
            int 21h
    end: hlt
    
